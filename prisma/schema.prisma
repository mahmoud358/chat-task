// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  // Relations
  conversationMembers ConversationMember[]
  messages           Message[]

  @@map("users")
}

model Conversation {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  // Relations
  members ConversationMember[]
  messages Message[]

  @@map("conversations")
}

model ConversationMember {
  id             String @id @default(cuid())
  conversationId String
  userId         String

  // Relations
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([conversationId, userId])
  @@map("conversation_members")
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  senderId       String
  text           String?
  imageUrl       String?
  createdAt      DateTime @default(now())

  // Relations
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender       User         @relation(fields: [senderId], references: [id], onDelete: Cascade)

  @@map("messages")
}
